'''
>>> add_symbol('WFC', """
... 06/30/2010    26.05   26.45   25.52   25.60   37,502,464
... 06/29/2010    26.57   26.66   25.79   25.93   55,571,794
... 06/28/2010    27.24   27.34   26.82   27.03   31,722,257
... 06/25/2010    27.15   27.61   26.85   27.05   78,979,326
... 06/24/2010    27.05   27.10   26.28   26.86   66,957,249
... 06/23/2010    27.38   27.76   27.15   27.32   36,032,901
... 06/22/2010    28.03   28.33   27.43   27.46   33,697,306
... 06/21/2010    28.44   28.50   27.79   27.94   30,005,326
... 06/18/2010    28.04   28.23   27.74   28.07   39,496,673
... 06/17/2010    28.10   28.19   27.53   27.93   30,739,337
... 06/16/2010    27.75   28.25   27.67   28.12   28,709,381
... 06/15/2010    27.59   27.93   27.50   27.91   45,138,138
... 06/14/2010    27.80   27.97   27.31   27.40   45,508,642
... 06/11/2010    27.74   27.95   27.35   27.84   39,468,045
... 06/10/2010    27.52   28.24   27.40   28.13   41,612,845
... 06/9/2010 27.95   27.96   26.90   27.03   37,988,155
... 06/8/2010 27.46   27.81   26.66   27.76   47,134,851
... 06/7/2010 28.01   28.11   27.26   27.29   36,969,771
... 06/4/2010 28.28   28.45   27.65   27.78   50,696,703
... 06/3/2010 29.36   29.48   28.52   28.86   30,894,033
... 06/2/2010 28.56   29.20   28.32   29.18   32,486,365
... 06/1/2010 28.68   29.20   28.19   28.23   39,475,608""")

>>> add_symbol('JPM', """
... 06/30/2010    37.02   37.49   36.51   36.61   35,336,326
... 06/29/2010    37.91   37.91   36.88   37.06   56,696,705
... 06/28/2010    39.55   39.64   38.47   38.54   39,968,436
... 06/25/2010    38.78   39.60   38.28   39.44   70,742,457
... 06/24/2010    38.55   38.70   37.42   38.03   73,853,657
... 06/23/2010    38.29   39.11   38.02   38.89   45,046,088
... 06/22/2010    38.93   39.58   38.22   38.33   42,253,316
... 06/21/2010    39.55   39.78   38.66   38.87   33,665,045
... 06/18/2010    38.60   39.27   38.38   39.18   37,270,782
... 06/17/2010    38.60   38.90   37.92   38.44   34,755,040
... 06/16/2010    38.02   38.88   37.99   38.52   37,220,666
... 06/15/2010    37.55   38.28   37.26   38.25   45,364,115
... 06/14/2010    37.97   38.27   37.23   37.33   48,662,150
... 06/11/2010    37.79   38.17   37.52   38.09   31,147,584
... 06/10/2010    37.68   38.37   37.41   38.29   44,302,588
... 06/9/2010 38.15   38.16   37.01   37.12   42,585,909
... 06/8/2010 36.86   37.80   36.55   37.78   51,017,832
... 06/7/2010 37.79   38.13   36.66   36.72   44,528,215
... 06/4/2010 38.49   38.70   37.50   37.62   52,868,851
... 06/3/2010 39.86   39.94   38.62   39.10   30,956,959
... 06/2/2010 39.17   39.62   38.67   39.55   39,618,408
... 06/1/2010 39.32   39.96   38.50   38.54   37,848,559""")

>>> add_symbol('BAC', """
... 06/30/2010    14.62   14.80   14.30   14.37   138,977,965
... 06/29/2010    15.01   15.05   14.45   14.57   202,000,694
... 06/28/2010    15.50   15.55   15.21   15.24   110,727,076
... 06/25/2010    15.26   15.62   15.11   15.42   175,269,445
... 06/24/2010    15.27   15.31   14.98   15.02   167,901,124
... 06/23/2010    15.60   15.71   15.29   15.43   132,920,793
... 06/22/2010    15.78   15.90   15.56   15.58   108,235,655
... 06/21/2010    16.03   16.10   15.75   15.79   109,114,541
... 06/18/2010    15.88   15.91   15.74   15.82   105,721,640
... 06/17/2010    15.96   16.07   15.59   15.82   127,136,347
... 06/16/2010    15.70   15.97   15.65   15.87   110,926,679
... 06/15/2010    15.56   15.84   15.31   15.80   129,814,994
... 06/14/2010    15.70   15.79   15.39   15.41   120,504,579
... 06/11/2010    15.33   15.70   15.30   15.60   115,114,226
... 06/10/2010    15.27   15.48   15.11   15.46   124,056,497
... 06/9/2010 15.43   15.49   14.94   15.01   150,844,881
... 06/8/2010 14.88   15.35   14.79   15.33   167,648,848
... 06/7/2010 15.36   15.40   14.77   14.83   158,959,006
... 06/4/2010 15.50   15.73   15.25   15.35   148,415,744
... 06/3/2010 15.96   16.07   15.69   15.81   124,229,068
... 06/2/2010 15.58   15.92   15.35   15.89   127,114,486
... 06/1/2010 15.58   15.98   15.40   15.44   126,185,386""")

>>> total_gain('BAC')
'-1.07'
>>> total_gain('JPM')
'-1.93'
>>> largest_gain('WFC')
('06/10/2010', '1.10')
>>> largest_loss('WFC')
('06/29/2010', '-1.10')
>>> best_performer()
('BAC', '-1.07')
>>> worst_performer()
('WFC', '-2.63')
>>> largest_gain()
('06/10/2010', '2.72')
'''
def add_symbol(symbol, history):
    '''The symbol parameter is the ticker symbol for a stock that is being
       added to the "index", where the index value is calculated as the sum of
       1 share of each stock in the index.
       I.e. in this lab, the closing price of the index on any given day is
       the price of one share of WFC + the price of 1 share of BAC + the price
       of one share of JMP.
       The 'history' parameter is a table of data that is separated by spaces
       (for columns) and newlines (for rows).  The data is all in one string,
       so needs to be broken up to be processed.
       The history columns are: date, open, high, low, close, volume'''
    pass

def total_gain(symbol):
    '''Return (as a string) the total gain for a stock over the time-period of
       the data provided.  The gain is defined as the difference in closing
       price from the first day to the last.'''

def largest_gain(symbol=None):
    '''Return (as a tuple) the date and gain for the best day for the symbol
       passed in.  Gain is again defined as the delta between the closing price
       and the closing price of the day before.
       If no symbol passed, return the largest gain for the whole index.'''
    pass

def largest_loss(symbol=None):
    '''Inverse of largest_gain.'''
    pass

def best_performer():
    '''Find the best overall performing stock in the index based on closing
       share price over the period defined.  Return the symbol and the total
       gain.'''
    pass

def worst_performer():
    '''Exact opposite of the best_performer()'''
    pass


if __name__ == '__main__':
    import doctest
    doctest.testmod()
